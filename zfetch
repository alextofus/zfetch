#!/bin/bash

# Get OS information
OS=$(grep '^NAME=' /etc/os-release | cut -d= -f2 | tr -d '"')

# Get Kernel version and shorten it
KERNEL=$(uname -r | cut -d'-' -f1)

# Attempt to detect the Window Manager or Desktop Environment
if command -v xprop &>/dev/null; then
    WM=$(xprop -root _NET_WM_NAME | cut -d\" -f2)
elif [ -n "$DESKTOP_SESSION" ]; then
    WM=$DESKTOP_SESSION
elif [ -n "$XDG_CURRENT_DESKTOP" ]; then
    WM=$XDG_CURRENT_DESKTOP
else
    WM=$(ps -e | grep -m 1 -o -E 'i3|gnome-shell|kwin_x11|kwin_wayland|xfwm4|openbox|fluxbox|icewm|mate-session|lxqt-session|jwm|enlightenment|hyprland|sway')
    [ -z "$WM" ] && WM="Unknown"
fi

# Get system architecture
TYPE=$(uname -m)

# Adjust the lengths of the fields
OS_FIELD="OS: $OS"
KERNEL_FIELD="Kernel: $KERNEL"
WM_FIELD="WM: $WM"
TYPE_FIELD="Type: $TYPE"

# Determine the max length for proper alignment
MAX_LENGTH=$(echo -e "$OS_FIELD\n$KERNEL_FIELD\n$WM_FIELD\n$TYPE_FIELD" | wc -L)

# Print the information
echo "╭────────INFO────────╮"
printf "│ %-*s │\n" $((MAX_LENGTH)) "$OS_FIELD"
printf "│ %-*s │\n" $((MAX_LENGTH)) "$KERNEL_FIELD"
printf "│ %-*s │\n" $((MAX_LENGTH)) "$WM_FIELD"
printf "│ %-*s │\n" $((MAX_LENGTH)) "$TYPE_FIELD"
echo "╰────────────────────╯"
